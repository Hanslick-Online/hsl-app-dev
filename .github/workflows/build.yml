name: Build and publish

on:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_pages:
    name:  Build HTML pages
    runs-on: ubuntu-latest
    env:
      ANT_OPTS: -Xmx5g
    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
         python-version: '3.10'
    - name: Setup Java / Ant
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Fetch static-app skeleton
      run: |
        ./fetch_data_app.sh
    - name: Install Python libraries
      run: |
        pip install -U pip
        pip install -r build_app/python/requirements.txt
    - name: Fetch data
      run: |
        chmod +x build_app/shell/* build_app/python/*
        ./build_app/shell/fetch_data.sh
    - name: Install Saxon, Ant and Fundament
      run: |
        apt-get update && apt-get install ant -y --no-install-recommend
        ./build_app/shell/script.sh
    - name: preprocess
      run: |
        ant -f build_app/ant/preprocess.xml
    - name: add attributes and denormalize indices
      run: |
        ./build_app/shell/attributes.sh
        ./build_app/shell/denormalize.sh
    - name: Build
      run: |
        ant -f build_app/ant/build.xml
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: data-artifact
        # Upload entire repository
        path: .
  compile_latex:
    name: Produce PDF files
    runs-on: ubuntu-latest
    needs: build_pages
    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4
    - name: Download data-artifact
      uses: actions/download-artifact@v4
      with:
        name: data-artifact
        path: .
    - name: Install TeX Live
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-xetex texlive-latex-recommended texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra texlive-lang-german
    - name: Transform XML-TEI to LaTeX
      run: |
        folders = "data/traktat/editions data/vms/editions data/critics/editions data/doc/editions"
        mkdir -p tmp/tex html/pdf
        for dir in $folders; do
          echo "Processing directory: $dir"
          find "$dir" -type f -name "*.xml" | while read filename; do
            echo "Transforming $filename"
            chmod +x build_app/python/xml2latex.py
            build_app/python/xml2latex.py "$filename" "tmp/${filename%.xml}.tex"
          done
        done
    - name: Compile LaTeX to PDF
      run: |
        find "tmp" -type f -name "*.tex" | while read filename; do
            echo "Compiling $filename"
            xelatex -interaction=nonstopmode -output-directory="html/pdf" "$filename"
        done
    - name: Setup GitHub Pages
      uses: actions/configure-pages@v5
    - name: Upload full site artifacts
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: "html"
  type_sense:
    name: Reindex TypeSense
    runs-on: ubuntu-latest
    needs: build_pages
    env:
      TYPESENSE_HOST: typesense.acdh-dev.oeaw.ac.at
      TYPESENSE_PORT: 443
      TYPESENSE_PROTOCOL: https
      TYPESENSE_API_KEY: ${{secrets.TYPESENSE_API_KEY}}
    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4
    - name: Download html-artifact
      uses: actions/download-artifact@v4
      with:
        name: data-artifact
        path: .
  # - name: Preprocess data for Typesense
  #   run: |
  #     ant -f build_app/ant/fixtures.xml
  # - name: Build Typesense Index
  #  run: |
  #    python build_app/python/make_ts_index.py
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: compile_latex
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4